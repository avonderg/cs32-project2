{"ast":null,"code":"var _jsxFileName = \"/Users/suraj/Documents/Brown/Sophomore/Semester2/CSCI_32/project-2-avonderg-nxu4-sanand14/kanbanapp/src/components/Table/Table.tsx\";\nimport React from 'react'; // import TableRow from 'TableRow'\n\nimport TableRow from '../TableRow/TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Table(props) {\n  const rowMap = props.tableInfo.rowMap;\n  const kb_status = [];\n  const kb_text = [];\n  var output_table = {\n    kanban_status: kb_status,\n    kanban_text: kb_text\n  };\n\n  for (let i = 0; i < rowMap.length; i++) {\n    const relevant_columns = [];\n    relevant_columns[0] = \"block_id\";\n    relevant_columns[1] = \"block_title\";\n    relevant_columns[2] = \"block_content\";\n    relevant_columns[3] = \"block_date\";\n    const curr_row = rowMap[i];\n    const curr_priority = rowMap[i][\"name\"];\n    output_table.kanban_status[i] = curr_priority;\n    kb_text.push([]); // Save relevant columns from the database into the kanban datatype.\n\n    for (let j = 0; j < props.tableInfo.headerList.length; j++) {\n      var header_name = props.tableInfo.headerList[j];\n\n      if (relevant_columns.includes(header_name)) {\n        kb_text[i].push(curr_row[props.tableInfo.headerList[j]]);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"kanbanTable\",\n    id: \"kanban_display\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Need to Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Unassigned\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n        kanban_status: output_table.kanban_status,\n        kanban_text: output_table.kanban_text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Table;\n\nfunction displayTable(rowMap) {\n  const table = document.getElementById(\"kanban_display\");\n  const newRow = table.insertRow();\n  const currCell = newRow.insertCell(1);\n  const cellContents = document.createTextNode(\"bla\");\n  currCell.appendChild(cellContents);\n}\n\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/suraj/Documents/Brown/Sophomore/Semester2/CSCI_32/project-2-avonderg-nxu4-sanand14/kanbanapp/src/components/Table/Table.tsx"],"names":["React","TableRow","Table","props","rowMap","tableInfo","kb_status","kb_text","output_table","kanban_status","kanban_text","i","length","relevant_columns","curr_row","curr_priority","push","j","headerList","header_name","includes","displayTable","table","document","getElementById","newRow","insertRow","currCell","insertCell","cellContents","createTextNode","appendChild"],"mappings":";AAAA,OAAOA,KAAP,MAA8B,OAA9B,C,CACA;;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;AAmBA,SAASC,KAAT,CAAeC,KAAf,EAAiC;AAG7B,QAAMC,MAAM,GAAGD,KAAK,CAACE,SAAN,CAAgBD,MAA/B;AACA,QAAME,SAAkB,GAAG,EAA3B;AACA,QAAMC,OAAkB,GAAG,EAA3B;AAGA,MAAIC,YAAyB,GAAG;AAC5BC,IAAAA,aAAa,EAAEH,SADa;AAE5BI,IAAAA,WAAW,EAAEH;AAFe,GAAhC;;AAKA,OAAI,IAAII,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGP,MAAM,CAACQ,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AAEnC,UAAME,gBAAyB,GAAG,EAAlC;AACAA,IAAAA,gBAAgB,CAAC,CAAD,CAAhB,GAAsB,UAAtB;AACAA,IAAAA,gBAAgB,CAAC,CAAD,CAAhB,GAAsB,aAAtB;AACAA,IAAAA,gBAAgB,CAAC,CAAD,CAAhB,GAAsB,eAAtB;AACAA,IAAAA,gBAAgB,CAAC,CAAD,CAAhB,GAAsB,YAAtB;AACA,UAAMC,QAAQ,GAAGV,MAAM,CAACO,CAAD,CAAvB;AACA,UAAMI,aAAa,GAAGX,MAAM,CAACO,CAAD,CAAN,CAAU,MAAV,CAAtB;AACAH,IAAAA,YAAY,CAACC,aAAb,CAA2BE,CAA3B,IAAgCI,aAAhC;AACAR,IAAAA,OAAO,CAACS,IAAR,CAAa,EAAb,EAVmC,CAYnC;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGd,KAAK,CAACE,SAAN,CAAgBa,UAAhB,CAA2BN,MAA9C,EAAsDK,CAAC,EAAvD,EAA0D;AACtD,UAAIE,WAAmB,GAAGhB,KAAK,CAACE,SAAN,CAAgBa,UAAhB,CAA2BD,CAA3B,CAA1B;;AACA,UAAGJ,gBAAgB,CAACO,QAAjB,CAA0BD,WAA1B,CAAH,EAA0C;AACtCZ,QAAAA,OAAO,CAACI,CAAD,CAAP,CAAWK,IAAX,CAAgBF,QAAQ,CAACX,KAAK,CAACE,SAAN,CAAgBa,UAAhB,CAA2BD,CAA3B,CAAD,CAAxB;AACH;AAEJ;AACJ;;AACD,sBACI;AAAO,IAAA,SAAS,EAAG,aAAnB;AAAiC,IAAA,EAAE,EAAG,gBAAtC;AAAA,2BACI;AAAA,8BACA;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAOA,QAAC,QAAD;AAAU,QAAA,aAAa,EAAET,YAAY,CAACC,aAAtC;AAAqD,QAAA,WAAW,EAAED,YAAY,CAACE;AAA/E;AAAA;AAAA;AAAA;AAAA,cAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;KAhDQR,K;;AAkDT,SAASmB,YAAT,CAAsBjB,MAAtB,EAAuD;AACnD,QAAMkB,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAAd;AACA,QAAMC,MAAM,GAAGH,KAAK,CAACI,SAAN,EAAf;AACA,QAAMC,QAAQ,GAAGF,MAAM,CAACG,UAAP,CAAkB,CAAlB,CAAjB;AACA,QAAMC,YAAY,GAAGN,QAAQ,CAACO,cAAT,CAAwB,KAAxB,CAArB;AACAH,EAAAA,QAAQ,CAACI,WAAT,CAAqBF,YAArB;AACH;;AAGD,eAAe3B,KAAf","sourcesContent":["import React, {useState} from 'react';\n// import TableRow from 'TableRow'\nimport TableRow from '../TableRow/TableRow'\n\ntype table = {\n\n    headerList: string[]\n    rowMap: Record<string,string>[];\n}\n\ntype kanban_info = {\n    kanban_status: string[]\n    kanban_text: string[][]\n}\n\ntype tableprop = {\n    tableInfo: table;\n    setRowMap: (value: table) => void;\n}\n\n\nfunction Table(props: tableprop) {\n\n\n    const rowMap = props.tableInfo.rowMap\n    const kb_status:string[] = [];\n    const kb_text:string[][] = [];\n\n\n    var output_table: kanban_info = {\n        kanban_status: kb_status,\n        kanban_text: kb_text\n    };\n\n    for(let i = 0; i < rowMap.length; i++) {\n\n        const relevant_columns:string[] = []\n        relevant_columns[0] = \"block_id\"\n        relevant_columns[1] = \"block_title\"\n        relevant_columns[2] = \"block_content\"\n        relevant_columns[3] = \"block_date\"\n        const curr_row = rowMap[i]\n        const curr_priority = rowMap[i][\"name\"]\n        output_table.kanban_status[i] = curr_priority\n        kb_text.push([])\n\n        // Save relevant columns from the database into the kanban datatype.\n        for(let j = 0; j < props.tableInfo.headerList.length; j++){\n            var header_name: string = props.tableInfo.headerList[j]\n            if(relevant_columns.includes(header_name)){\n                kb_text[i].push(curr_row[props.tableInfo.headerList[j]])\n            }\n\n        }\n    }\n    return(\n        <table className = \"kanbanTable\" id = \"kanban_display\">\n            <tbody>\n            <tr>\n                <th>Need to Start</th>\n                <th>Unassigned</th>\n                <th>In Progress</th>\n                <th>Completed</th>\n            </tr>\n            <TableRow kanban_status={output_table.kanban_status} kanban_text={output_table.kanban_text}/>\n            </tbody>\n        </table>\n    )\n\n}\n\nfunction displayTable(rowMap: Record<string,string>[]) {\n    const table = document.getElementById(\"kanban_display\")! as HTMLTableElement\n    const newRow = table.insertRow();\n    const currCell = newRow.insertCell(1)\n    const cellContents = document.createTextNode(\"bla\")\n    currCell.appendChild(cellContents)\n}\n\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}