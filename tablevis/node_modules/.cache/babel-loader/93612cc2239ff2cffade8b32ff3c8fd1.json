{"ast":null,"code":"var _jsxFileName = \"/Users/neilxu/Documents/cs32/project-2-avonderg-nxu4-sanand14/tablevis/src/components/Table.tsx\";\nimport React from \"react\"; // import \"./App.css\";\n\nimport TableRow from \"./TableRow\";\n// @ts-ignore\nimport \"react-awesome-button/dist/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Table(props) {\n  const loadHeaders = () => {\n    let tableHeaders = [];\n\n    if (props.rows.length > 0) {\n      tableHeaders.push( /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Row #\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this));\n    }\n\n    for (let i = 0; i < props.headers.length; i++) {\n      tableHeaders.push( /*#__PURE__*/_jsxDEV(\"th\", {\n        children: [props.headers[i], /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sortButton\",\n          onClick: () => {\n            console.log(\"sorting by \" + props.headers[i]);\n            props.sortFunc(props.headers[i]);\n          },\n          children: \"sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this));\n    }\n\n    tableHeaders.push( /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }, this));\n    return tableHeaders;\n  };\n\n  const loadRows = () => {\n    // need to create the header map\n    let headerMap = new Map();\n\n    for (let i = 0; i < props.headers.length; i++) {\n      headerMap.set(i, props.headers[i]);\n    } // then for each row, we create a row, passing in the record and the headermap\n\n\n    let rows = [];\n\n    for (let i = 0; i < props.rows.length; i++) {\n      let currRecord = props.rows[i];\n      rows.push( /*#__PURE__*/_jsxDEV(TableRow, {\n        row: currRecord,\n        rowNum: (i + 1).toString(),\n        headerMap: headerMap,\n        deleteFunc: props.deleteFunc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this));\n    }\n\n    return rows;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.rows.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: loadHeaders()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: loadRows()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/neilxu/Documents/cs32/project-2-avonderg-nxu4-sanand14/tablevis/src/components/Table.tsx"],"names":["React","TableRow","Table","props","loadHeaders","tableHeaders","rows","length","push","i","headers","console","log","sortFunc","loadRows","headerMap","Map","set","currRecord","toString","deleteFunc"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,YAArB;AAMA;AACA,OAAO,sCAAP;;;AAUA,SAASC,KAAT,CAAeC,KAAf,EAAkC;AAChC,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAIC,YAAY,GAAG,EAAnB;;AACA,QAAIF,KAAK,CAACG,IAAN,CAAWC,MAAX,GAAoB,CAAxB,EAA2B;AACzBF,MAAAA,YAAY,CAACG,IAAb,eAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAlB;AACD;;AACD,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACO,OAAN,CAAcH,MAAlC,EAA0CE,CAAC,EAA3C,EAA+C;AAC7CJ,MAAAA,YAAY,CAACG,IAAb,eACE;AAAA,mBACGL,KAAK,CAACO,OAAN,CAAcD,CAAd,CADH,eAEE;AACE,UAAA,SAAS,EAAC,YADZ;AAEE,UAAA,OAAO,EAAE,MAAM;AACbE,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBT,KAAK,CAACO,OAAN,CAAcD,CAAd,CAA5B;AACAN,YAAAA,KAAK,CAACU,QAAN,CAAeV,KAAK,CAACO,OAAN,CAAcD,CAAd,CAAf;AACD,WALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAcD;;AACDJ,IAAAA,YAAY,CAACG,IAAb,eAAkB;AAAA;AAAA;AAAA;AAAA,YAAlB;AACA,WAAOH,YAAP;AACD,GAvBD;;AAyBA,QAAMS,QAAQ,GAAG,MAAM;AACrB;AACA,QAAIC,SAAS,GAAG,IAAIC,GAAJ,EAAhB;;AACA,SAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACO,OAAN,CAAcH,MAAlC,EAA0CE,CAAC,EAA3C,EAA+C;AAC7CM,MAAAA,SAAS,CAACE,GAAV,CAAcR,CAAd,EAAiBN,KAAK,CAACO,OAAN,CAAcD,CAAd,CAAjB;AACD,KALoB,CAMrB;;;AACA,QAAIH,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACG,IAAN,CAAWC,MAA/B,EAAuCE,CAAC,EAAxC,EAA4C;AAC1C,UAAIS,UAAkC,GAAGf,KAAK,CAACG,IAAN,CAAWG,CAAX,CAAzC;AACAH,MAAAA,IAAI,CAACE,IAAL,eACE,QAAC,QAAD;AACE,QAAA,GAAG,EAAEU,UADP;AAEE,QAAA,MAAM,EAAE,CAACT,CAAC,GAAG,CAAL,EAAQU,QAAR,EAFV;AAGE,QAAA,SAAS,EAAEJ,SAHb;AAIE,QAAA,UAAU,EAAEZ,KAAK,CAACiB;AAJpB;AAAA;AAAA;AAAA;AAAA,cADF;AAQD;;AACD,WAAOd,IAAP;AACD,GApBD;;AAsBA,sBACE;AAAA,cACGH,KAAK,CAACG,IAAN,CAAWC,MAAX,GAAoB,CAApB,gBACC;AAAA,8BACE;AAAA,kBAAKH,WAAW;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAQU,QAAQ;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,GAMC;AAPJ;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;KA5DQZ,K;AA8DT,eAAeA,KAAf","sourcesContent":["import React from \"react\";\n// import \"./App.css\";\nimport TableRow from \"./TableRow\";\nimport TableCell from \"./TableCell\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\n// @ts-ignore\nimport { AwesomeButton } from \"react-awesome-button\";\n// @ts-ignore\nimport \"react-awesome-button/dist/styles.css\";\n\ninterface TableInput {\n  name: string;\n  headers: string[];\n  rows: Record<string, string>[];\n  deleteFunc: (r: Record<string, string>) => void;\n  sortFunc: (col: string) => void;\n}\n\nfunction Table(props: TableInput) {\n  const loadHeaders = () => {\n    let tableHeaders = [];\n    if (props.rows.length > 0) {\n      tableHeaders.push(<th>Row #</th>);\n    }\n    for (let i = 0; i < props.headers.length; i++) {\n      tableHeaders.push(\n        <th>\n          {props.headers[i]}\n          <button\n            className=\"sortButton\"\n            onClick={() => {\n              console.log(\"sorting by \" + props.headers[i]);\n              props.sortFunc(props.headers[i]);\n            }}\n          >\n            sort\n          </button>\n        </th>\n      );\n    }\n    tableHeaders.push(<th></th>);\n    return tableHeaders;\n  };\n\n  const loadRows = () => {\n    // need to create the header map\n    let headerMap = new Map<number, string>();\n    for (let i = 0; i < props.headers.length; i++) {\n      headerMap.set(i, props.headers[i]);\n    }\n    // then for each row, we create a row, passing in the record and the headermap\n    let rows = [];\n    for (let i = 0; i < props.rows.length; i++) {\n      let currRecord: Record<string, string> = props.rows[i];\n      rows.push(\n        <TableRow\n          row={currRecord}\n          rowNum={(i + 1).toString()}\n          headerMap={headerMap}\n          deleteFunc={props.deleteFunc}\n        />\n      );\n    }\n    return rows;\n  };\n\n  return (\n    <div>\n      {props.rows.length > 0 ? (\n        <table>\n          <tr>{loadHeaders()}</tr>\n          <tbody>{loadRows()}</tbody>\n        </table>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}