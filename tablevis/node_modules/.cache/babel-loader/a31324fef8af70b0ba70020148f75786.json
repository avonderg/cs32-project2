{"ast":null,"code":"var _jsxFileName = \"/Users/neilxu/Documents/cs32/project-2-avonderg-nxu4-sanand14/tablevis/src/components/TableLoader.tsx\";\nimport React from \"react\";\n// @ts-ignore\nimport \"react-awesome-button/dist/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TableLoader(props) {\n  // need to use axios to get the table names\n  const handleChange = event => {\n    event.preventDefault();\n    props.change(event.target.value);\n  };\n\n  return (\n    /*#__PURE__*/\n    // <Select options={options} />\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tableLoaderDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              selected: true,\n              disabled: true,\n              hidden: true,\n              children: \"Choose here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 13\n            }, this), props.tableNames.map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: x,\n              children: x\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_c = TableLoader;\nexport default TableLoader;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableLoader\");","map":{"version":3,"sources":["/Users/neilxu/Documents/cs32/project-2-avonderg-nxu4-sanand14/tablevis/src/components/TableLoader.tsx"],"names":["React","TableLoader","props","handleChange","event","preventDefault","change","target","value","tableNames","map","x"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAOA;AACA,OAAO,sCAAP;;;AAOA,SAASC,WAAT,CAAqBC,KAArB,EAA8C;AAC5C;AACA,QAAMC,YAAY,GAAIC,KAAD,IAAiD;AACpEA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,KAAK,CAACI,MAAN,CAAaF,KAAK,CAACG,MAAN,CAAaC,KAA1B;AACD,GAHD;;AAIA;AAAA;AACE;AACA;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACE;AAAA,iCACE;AAAQ,YAAA,QAAQ,EAAEL,YAAlB;AAAA,oCACE;AAAQ,cAAA,KAAK,EAAC,EAAd;AAAiB,cAAA,QAAQ,MAAzB;AAA0B,cAAA,QAAQ,MAAlC;AAAmC,cAAA,MAAM,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAIGD,KAAK,CAACO,UAAN,CAAiBC,GAAjB,CAAsBC,CAAD,iBACpB;AAAQ,cAAA,KAAK,EAAEA,CAAf;AAAA,wBAAmBA;AAAnB;AAAA;AAAA;AAAA;AAAA,oBADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAiBD;;KAvBQV,W;AAwBT,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\n// @ts-ignore\n// import Select from \"react-select\";\n// @ts-ignore\nimport { AwesomeButton } from \"react-awesome-button\";\n// @ts-ignore\nimport \"react-awesome-button/dist/styles.css\";\n\ninterface TableLoaderInput {\n  tableNames: string[];\n  change: React.Dispatch<string>;\n}\n\nfunction TableLoader(props: TableLoaderInput) {\n  // need to use axios to get the table names\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    event.preventDefault();\n    props.change(event.target.value);\n  };\n  return (\n    // <Select options={options} />\n    <div>\n      <div className=\"tableLoaderDiv\">\n        <div>\n          <select onChange={handleChange}>\n            <option value=\"\" selected disabled hidden>\n              Choose here\n            </option>\n            {props.tableNames.map((x: string) => (\n              <option value={x}>{x}</option>\n            ))}\n          </select>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default TableLoader;\n"]},"metadata":{},"sourceType":"module"}